package utility;

import java.io.File;
import java.io.IOException;
import java.net.URL;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

public class PDFUtility {

	 public String readPDF(String filePath) throws IOException {
	        try (PDDocument document = PDDocument.load(new File(filePath))) {
	            PDFTextStripper stripper = new PDFTextStripper();
	            return stripper.getText(document);
	        }
	    }

	    public String readPDFFromURL(String pdfUrl) throws IOException {
	        try (PDDocument document = PDDocument.load(new URL(pdfUrl).openStream())) {
	            PDFTextStripper stripper = new PDFTextStripper();
	            return stripper.getText(document);
	        }
	    }

	    public boolean validateTextInPDF(String filePath, String searchText) throws IOException {
	        return readPDF(filePath).contains(searchText);
	    }

	    public boolean validateTextInPDFFromURL(String pdfUrl, String searchText) throws IOException {
	        return readPDFFromURL(pdfUrl).contains(searchText);
	    }

	    public int countOccurrencesInPDF(String filePath, String searchText) throws IOException {
	        String text = readPDF(filePath);
	        return countOccurrences(text, searchText);
	    }

	    public int countOccurrencesInPDFFromURL(String pdfUrl, String searchText) throws IOException {
	        String text = readPDFFromURL(pdfUrl);
	        return countOccurrences(text, searchText);
	    }

	    public String extractTextBetween(String filePath, String startText, String endText) throws IOException {
	        String text = readPDF(filePath);
	        int startIndex = text.indexOf(startText);
	        int endIndex = text.indexOf(endText, startIndex + startText.length());
	        if (startIndex == -1 || endIndex == -1) {
	            return "";
	        }
	        return text.substring(startIndex + startText.length(), endIndex).trim();
	    }

	    public String extractTextBetweenFromURL(String pdfUrl, String startText, String endText) throws IOException {
	        String text = readPDFFromURL(pdfUrl);
	        int startIndex = text.indexOf(startText);
	        int endIndex = text.indexOf(endText, startIndex + startText.length());
	        if (startIndex == -1 || endIndex == -1) {
	            return "";
	        }
	        return text.substring(startIndex + startText.length(), endIndex).trim();
	    }

	    private int countOccurrences(String text, String searchText) {
	        int count = 0;
	        int index = 0;
	        while ((index = text.indexOf(searchText, index)) != -1) {
	            count++;
	            index += searchText.length();
	        }
	        return count;
	    }
}
